#include "jetstatus.h"
#include "ui_jetstatus.h"
#include "qstring.h"
#include "qtimer.h"
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/ioctl.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <errno.h>
#define FPGA_TEST 0x0

#define FPGA_READ_TEMP 0x1

#define FPGA_READ_PRESSURE 0x2

char *devname = "/dev/s3c-fpga";

int fd;

int ret;
int buffer[3] = {0xaa55, 0xccbb, 0x1234};

int status;

QTimer *timer;

void Jetstatus::update_timer()
{
QTime time = QTime::currentTime();
QString text = time.toString("hh:mm")
    ui->lineEdit_3->setText(text);
	printf("Timer Function!\n");

}

Jetstatus::Jetstatus(QWidget *parent) :
    MainWindow(parent),
    ui(new Ui::Jetstatus)
{
    ui->setupUi(this);
    createActions();
    createMenus();
timer = new QTimer(this);
connect(timer, SIGNAL(timeout()), this, SLOT(update_timer()));
printf("Connect timer slot\n");
    timer->start(1000);

    fd = open(devname, O_RDWR);

    if (fd < 0)
          printf("open error\n");

}

Jetstatus::~Jetstatus()
{
    delete ui;
}

void Jetstatus::on_jetbutton_clicked(QAbstractButton *button)
{
    int i = 0;
int ret;
int j;
    i = ui->comboBox->currentIndex();
    ui->comboBox_10->setCurrentIndex(i);


    fprintf(stderr,"1: %s.",ui->lineEdit_15->text().toAscii().constData());


    /* read pressure */
#if 1 
for (j=0; j<3; j++) {
    ret = ioctl(fd, j, &status);

    if (ret < 0)
       printf("ioctl error sending cmd %d\n", j); //print error message on screen
    }
#endif
     printf("read data\n");
    ret = read(fd, buffer, sizeof(int));

    //print buffer[0] data to screen pressure label.
   // buffer[0]
   // button->
}

void Jetstatus::on_pushButton_clicked()
{
    /* read tempture */
    QString str;
int j;
#if 1 
    ret = ioctl(fd, FPGA_READ_TEMP, &status);

    if (ret < 0)

       printf("ioctl error\n"); //print error message on screen
#endif

for (j=0; j<3; j++) {
	printf("buffer[%d]: 0x%x\n",j,buffer[j]);
}
    ret = read(fd, buffer, sizeof(int));
    printf("read data from driver\n");
    str = QString::number(buffer[0]);
    ui->pressure0->setText(str);
    ui->lineEdit_3->setText(QString("30"));
    printf("Please check Line edit text\n");
    timer->start(1000);


    //print buffer[0] data to screen.
    //pressure0->


}
